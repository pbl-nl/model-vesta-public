//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container Resultaten := for_each_ne(Classifications/Rekenstap/name
		, 'Model/CalculationSchemes/Resultaten(' + quote(Classifications/Rekenstap/name) + ')'
	)
	, using = "Model"
{
	container ProductiePerBron := for_each_nedv(Classifications/Rekenstap/name
		,replace(
			 'sum('
				'@RW@/results/RestWarmte/P_vol * @RW@/KostenBaten/V_WarmtePrimairD * float64(@RW@/GebruikOptie), '
				'MakeDefined(@RW@/Bronnen/TypeInfoList_rel[@RW@/LastState/CurrBron], Kengetallen/WarmteBronnen/MetaData/TypeInfoList/V/Onbekend)'
			 ') / 1000000[Units/GJ / Units/PJ]'
			,'@RW@', 'TussenResultaten/@STAP@/GebiedsAllocatie/RestWarmte'
			,'@STAP@', Classifications/Rekenstap/name
			 )
		,Kengetallen/WarmteBronnen/MetaData/TypeInfoList, Units/PJ_yr
		);

	container Exports: isHidden = "True"
	{
		container impl
		{
			parameter<string> GenerateAllIndicatorenList := AsList(Classifications/Rekenstap/name+'/Generate/All', ';');
		}

		parameter<string> GenerateAllIndicatoren := 'Ready', ExplicitSuppliers = "= impl/GenerateAllIndicatorenList";

		container StartTables := StartJaar/InputOutput/totaal/Ongewogen;
		container LastTables  := =Last(Rekenstap/name)+'/InputOutput/totaal/Ongewogen';
		// for regresssion testing
		/*
		container t510_indicator_results_test
		{
			parameter<string> result := 
				'<description> run: ' + Expand(., '%configName%') + '<br>'
				'<I>version</i>: </description>' + 
				'<result><br><br>' + 
				' jaarlijks, Maatschappelijk<br>' +
				'StartJaar : ' + replace(string(StartTables/jaarlijks/MaatschappelijkEindtotaal),'.',',') + ' ' 
					+ PropValue(ValuesUnit(StartTables/jaarlijks/MaatschappelijkEindtotaal), 'metric') + ' <br>' + 
				' Last : ' + replace(string(LastTables/jaarlijks/MaatschappelijkEindtotaal),'.',',') + ' ' 
					+ PropValue(ValuesUnit(LastTables/jaarlijks/MaatschappelijkEindtotaal), 'metric') + ' <br><br>' + 
				' Energy, O Totaal<br>'+
				'StartJaar : ' + replace(string(sum(StartTables/Verbruik/matrix/Table/Oj_Totaal)),'.',',') + ' ' 
					+ PropValue(ValuesUnit(StartTables/Verbruik/matrix/Table/Oj_Totaal), 'metric') + '<br>'  + 
				' Last : ' + replace(string(sum(LastTables/Verbruik/matrix/table/Oj_Totaal)),'.',',') + ' ' 
					+ PropValue(ValuesUnit(LastTables/Verbruik/matrix/table/Oj_Totaal), 'metric') + '<br><br>'  + 
				' CO2, O Netto<br>StartJaar : ' + replace(string(sum(StartTables/Uitstoot/CO2/matrix/TableData/Oj_Netto )),'.',',') + ' ' 
					+ PropValue(ValuesUnit(StartTables/Uitstoot/CO2/matrix/TableData/Oj_Netto), 'metric') + '<br>' + 
				' Last : ' + replace(string(sum(LastTables/Uitstoot/CO2/matrix/TableData/Oj_Netto)),'.',',') + ' ' 
					+ PropValue(ValuesUnit(LastTables/Uitstoot/CO2/matrix/TableData/Oj_Netto), 'metric') + '<br>' +
				'</result>'
			,	StorageType = "str"
			,	storagename = "= '%localDataProjDir%/vesta_indicator_results_test.html'";
		}
		*/
		container Woningen
		{
			container class
			{
				unit<uint32> WB 	:= combine(classifications/WoningtypeBestaand, Classifications/BouwjaarWoningBestaand)
				{
					attribute<Classifications/WoningtypeBestaand>		Woningtype_rel		:= first_rel;
					attribute<Classifications/BouwjaarWoningBestaand>	BouwjaarKlasse_rel	:= second_rel;
				}
				unit<uint32> WBS	:= combine(WB, Classifications/schillabel)
				{
					attribute<WB> 										WB_rel 				:= first_rel;
					attribute<Classifications/WoningtypeBestaand>		Woningtype_rel		:= WB/Woningtype_rel[WB_rel];
					attribute<Classifications/BouwjaarWoningBestaand>	BouwjaarKlasse_rel	:= WB/BouwjaarKlasse_rel[WB_rel];
					attribute<Classifications/schillabel>				Schillabel_rel		:= second_rel;
					attribute<string> 									Woningtype 			:= classifications/WoningtypeBestaand/name[woningtype_rel];
					attribute<string> 									BouwjaarKlasse 		:= classifications/BouwjaarWoningBestaand/excel_code[BouwjaarKlasse_rel];
					attribute<string> 									Energielabel 		:= classifications/schillabel/name[Schillabel_rel];
					attribute<uint32>									Aantal_woningen		:= count(vbo/Woningtype, vbo/WBS_rel);
					attribute<GJ_yr>									V_RV_mean			:= mean(vbo/V_RV, vbo/WBS_rel);
					attribute<GJ_yr>									V_TW_mean			:= mean(vbo/V_TW, vbo/WBS_rel);
					attribute<GJ_yr>									V_RV_TW_mean		:= mean(vbo/V_RV_TW, vbo/WBS_rel);
					attribute<Eur>										Ki_GV_B_mean		:= mean(vbo/Ki_GV_B, vbo/WBS_rel);
					attribute<Eur>										Ki_GV_D_mean		:= mean(vbo/Ki_GV_D, vbo/WBS_rel);
				}
			}
		
			unit<uint32> vbo := Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied
			{
				attribute<classifications/WoningtypeBestaand>		Woningtype		:= Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/WoningtypeBestaand_rel;
				attribute<classifications/BouwjaarWoningBestaand>	Bouwjaarklasse	:= Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/BouwjaarWoningBestaand_rel;
				attribute<classifications/schillabel>				Energielabel	:= BeginSituatie/StartingStateComponenten/BestaandeWoning/Results/SchilLabel_rel;
				
				attribute<string>		Woningtype_str		:= classifications/WoningtypeBestaand/name[Woningtype];
				attribute<string>		BouwjaarKlasse_str	:= Classifications/BouwjaarWoningBestaand/excel_code[Bouwjaarklasse];
				attribute<string>		Energielabel_str	:= Classifications/schillabel/name[Energielabel];
				attribute<GJ_yr>		V_RV				:= TussenResultaten/StartJaar/BebouwingsComponenten/BestaandeWoning/BO/Functioneel/StartlabelRV;
				attribute<GJ_yr>		V_TW				:= TussenResultaten/StartJaar/BebouwingsComponenten/BestaandeWoning/BO/Functioneel/TW;
				attribute<GJ_yr>		V_RV_TW				:= V_RV + V_TW;
				attribute<Eur>			Ki_GV_B 			:= TussenResultaten/R2_2030/BebouwingsComponenten/BestaandeWoning/Doellabels/B/Ki_GV;
				attribute<Eur>			Ki_GV_D 			:= TussenResultaten/R2_2030/BebouwingsComponenten/BestaandeWoning/Doellabels/D/Ki_GV;
				attribute<class/WB> 	WB_rel				:= combine_data(class/WB, Woningtype, Bouwjaarklasse);
				attribute<class/WBS>	WBS_rel				:= combine_data(class/WBS, WB_rel, Energielabel);
			}
		}
		
		
		container BAG
		{
			unit<uint32> vbo := Invoer/RuimtelijkeData/BAG/import/vbo;
			unit<uint32> vbo_oppervlak_gecorrigeerd_INV := vbo
			{
				attribute<Units/m2> wonen :=
					(oppervlak_filters/rare_waarden  || (vbo/Oppervlakte > 10000i && vbo/pand_bouwlagen_fictief > 10f))
						? vbo/Oppervlakte[Units/m2]
						: (0 / 0)[Units/m2]
				,	Descr    = "Dataset van records die afvallen door het filter, statistieken geven inzicht in de verdeling in oppervlaktes";

				attribute<Units/m2> utiliteit :=
					(oppervlak_filters/rare_waarden  || (vbo/Oppervlakte > 160000i && vbo/pand_bouwlagen_fictief > 45f))
						? Oppervlakte[Units/m2]
						: (0 / 0)[Units/m2]
				,	Descr = "Dataset van records die afvallen door het filter, statistieken geven inzicht in de verdeling in oppervlaktes";
			
				unit<uint32> utiliteit_sub := subset(vbo/oppervlakte <> 999999i && vbo/oppervlakte > 160000i && vbo/pand_bouwlagen_fictief > 45f)
				{
					attribute<Units/m2> Oppervlakte      := vbo/Oppervlakte[nr_OrgEntity][Units/m2];
					attribute<float32> bouwlagen_fictief := vbo/pand_bouwlagen_fictief[nr_OrgEntity];
				}
			}

			unit<uint32> vbo_utiliteit := Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied;
			unit<uint32> combine_BouwjaarUtil_utiliteit := combine(Classifications/BouwjaarUtilBestaand ,Classifications/UtilTypeBestaand)
			{
				attribute<string>  name_bj                          := Classifications/BouwjaarUtilBestaand/label[first_rel];
				attribute<string>  name_gd                          := Classifications/UtilTypeBestaand/label[second_rel];
				attribute<.>       combine_bj_gd_rel(vbo_utiliteit) := combine_data(., Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/BouwjaarUtilBestaand_rel,  Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/gebruiksdoel);
				attribute<uint32>  count(.)                         := pcount(combine_bj_gd_rel);
				attribute<float64> sum(.)                           := sum(Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/Oppervlakte,combine_bj_gd_rel);
			}
		}
	}
}