//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

template ModelObjectKentallenImport 
{
	// begin case parameters
	parameter<string>                      FileName;
	unit<uint8>                            model_type;
	unit<uint8>                            bouwjaarindeling;
	attribute<bool>                        SchilSprong_sel (Classifications/SchilSprong);
	parameter<Classifications/GebouwOptie> GebouwOptie;
	// end case parameters

	// Ki_SXY_[min/max]_[asl/opp]

	unit<uint32> Table: StorageName = "='%EnergieDataProjDir%/'+ FileName"
		, StorageType     = "gdal.vect"
		, StorageReadOnly = "True";

	unit<uint32> Results := Table
	{
		attribute<string> label := trim(type_str) + ', ' + trim(table/BouwJaar_str), DialogType = "labelText";

		unit<uint8> ModelObjectKeyDomein := combine_uint8(model_type, bouwjaarindeling);

		attribute<bouwjaarindeling>     BouwJaar_rel    := rlookup(trim(Table/BouwJaar_str ), bouwjaarindeling/excel_code);
		attribute<model_type>           ModelType_rel   := rlookup(trim(type_str), model_type/Excel_code);
		attribute<ModelObjectKeyDomein> ModelObjectKey  := combine_data(ModelObjectKeyDomein, ModelType_rel, BouwJaar_rel);
	
		attribute<classifications/Schillabel> Schillabel_rel := rlookup(Table/Default_label, Classifications/Schillabel/name);

		container V_RV_asl := for_each_nedv(Classifications/Schillabel/name, 'table/Vrv_'+Classifications/Schillabel/name+'_asl[GJ_yr_asl]', ., GJ_yr_asl), Descr = "per schillabel: functionele warmtevraag voor ruimteverwarming per aansluiting, onafhankelijk van oppervlak";
		container V_RV_opp := for_each_nedv(Classifications/Schillabel/name, 'table/Vrv_'+Classifications/Schillabel/name+'_opp[GJ_yr_m2 ]', ., GJ_yr_m2 ), Descr = "per schillabel: functionele warmtevraag voor ruimteverwarming per vierkante meter, het variabele deel";

		attribute<GJ_yr_asl> V_TW_asl   := table/Vww_asl[GJ_yr_asl];
		attribute<GJ_yr_m2 > V_TW_opp   := table/Vww_opp[GJ_yr_m2 ];
		attribute<GJ_yr_asl> V_EA_asl   := table/Ve_asl [GJ_yr_asl];
		attribute<GJ_yr_m2 > V_EA_opp   := table/VE_opp [GJ_yr_m2 ];

		attribute<GJ_yr_asl> V_K_asl    := table/Vk_asl   [GJ_yr_asl];
		attribute<GJ_yr_m2>  V_K_opp    := table/Vk_opp   [GJ_yr_m2 ];
		attribute<GJ_yr_asl> V_Vent_asl := table/Vvent_asl[GJ_yr_asl], Descr = "ventilatievraag bij woningen vanaf schillabel B";
		attribute<GJ_yr_m2>  V_Vent_opp := table/Vvent_opp[GJ_yr_m2 ], Descr = "variabele extra ventilatievraag bij woningen vanaf schillabel B";

		container Ki_min_asl := for_each_nedv(SchilSprong_sel ? Classifications/SchilSprong/name : '', 'table/Ki_'+Classifications/SchilSprong/name+'_min_asl[Eur_asl]', ., Eur_asl);
		container Ki_max_asl := for_each_nedv(SchilSprong_sel ? Classifications/SchilSprong/name : '', 'table/Ki_'+Classifications/SchilSprong/name+'_max_asl[Eur_asl]', ., Eur_asl);

		container Ki_min_opp := for_each_nedv(SchilSprong_sel ? Classifications/SchilSprong/name : '', 'table/Ki_'+Classifications/SchilSprong/name+'_min_opp[Eur_m2]', ., Eur_m2);
		container Ki_max_opp := for_each_nedv(SchilSprong_sel ? Classifications/SchilSprong/name : '', 'table/Ki_'+Classifications/SchilSprong/name+'_max_opp[Eur_m2]', ., Eur_m2);

		container Ki_cutoff_opp := for_each_nedv(SchilSprong_sel ? Classifications/SchilSprong/name : '', 'table/Ki_'+Classifications/SchilSprong/name+'_500m[Eur_m2]', ., Eur_m2);

		attribute<Classifications/GebouwOptie> StartOptie_rel := const(GebouwOptie, .);
	}
}