//////////////////////////////////////////////////////////////////////////////////////////
//                                                                                      //
//                   (C) VESTA 2020 - Planbureau voor de Leefomgeving                   //
//                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////

container DataPakketExport: isHidden = "True"
{
	container Bestaand
	{
		attribute<rdc_meter>                                 geometry      (WoonUtil) := union_data(WoonUtil, Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/Geometry, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/Geometry);
		attribute<Invoer/RuimtelijkeData/StudieGebied/buurt> Buurt_rel     (WoonUtil) := point_in_polygon(geometry, Invoer/RuimtelijkeData/StudieGebied/buurt/geometry);
		attribute<bool>                                      IsUitgesloten (WoonUtil) := PlanRegioResults/Statisch/IsUitgesloten[Buurt_rel];
		attribute<ratio>                                     R_stadV       (WoonUtil) := PlanRegioResults/R_stadV[Buurt_rel];
		attribute<string>                                    IsWater       (WoonUtil) := Invoer/RuimtelijkeData/StudieGebied/buurt/IsWater[Buurt_rel];
		attribute<nrWoning>                                  nrWEQ         (WoonUtil) := PlanRegioResults/nrWEQ[Buurt_rel];
		attribute<string>                                    GM_code       (WoonUtil) := rjoin(WoonUtil/I01_BU_CODE, Invoer/RuimtelijkeData/StudieGebied/buurt/BU_CODE, Invoer/RuimtelijkeData/StudieGebied/buurt/GM_CODE);

		unit<uint32> WoonUtil := union_unit(Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied)
		, DialogType = "Map"
		, DialogData = "geometry"
		{
			attribute<string> D1_identificatie       := union_data(., /Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/identificatie, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/identificatie);
			attribute<string> D2_bebouwingscomponent := union_data(., const('wonen',Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied), const('utiliteit',/Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied));
			attribute<m>      D3_RD_X                := PointCol(geometry)[m];
			attribute<m>      D4_RD_Y                := PointRow(geometry)[m];
			attribute<m2>     D5_Oppervlakte         := union_data(., /Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/oppervlakte, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/oppervlakte);

			attribute<string> I01_BU_CODE            := Invoer/RuimtelijkeData/StudieGebied/buurt/BU_CODE[Buurt_rel];

			attribute<GJ_yr>  H01_Vraag_totaal       := add(H02_Vraag_RV, H03_Vraag_TW, H04_Vraag_Vent, H05_Vraag_K, H06_Vraag_App);

			attribute<GJ_yr>  H02_Vraag_RV           := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/Functioneel/V_RV, Allocatie/BestaandeUtil/BO/Functioneel/V_RV), 0[GJ_yr]);

			attribute<GJ_yr>  H03_Vraag_TW           := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/Functioneel/V_TW, Allocatie/BestaandeUtil/BO/Functioneel/V_TW), 0[GJ_yr]);

			attribute<GJ_yr>  H04_Vraag_Vent         := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/Functioneel/V_Vent, Allocatie/BestaandeUtil/BO/Functioneel/V_Vent), 0[GJ_yr]);

			attribute<GJ_yr>  H05_Vraag_K            := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/Functioneel/V_K * float64(Allocatie/BestaandeWoning/aandelen/WKO15_15 || Allocatie/BestaandeWoning/aandelen/WKO15_50 || Allocatie/BestaandeWoning/aandelen/WKO15_70), Allocatie/BestaandeUtil/BO/Functioneel/V_K), 0[GJ_yr]);

			attribute<GJ_yr> H06_Vraag_App           := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/Functioneel/V_App, Allocatie/BestaandeUtil/BO/Functioneel/V_App), 0[GJ_yr]);

			attribute<GJ_yr> H31_input_gas          := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(
					  union_data(., Allocatie/BestaandeWoning/Metervraag/Aardgas,   Allocatie/BestaandeUtil/Metervraag/Aardgas)
					+ union_data(., Allocatie/BestaandeWoning/Metervraag/Waterstof, Allocatie/BestaandeUtil/Metervraag/Waterstof)
				,0[GJ_yr]);

			attribute<GJ_yr> H32_input_elektriciteit := (IsUitgesloten)
				? 0[GJ_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/Metervraag/Elektriciteit, Allocatie/BestaandeUtil/Metervraag/Elektriciteit), 0[GJ_yr]);

			attribute<GJ_yr> H33_input_warmte        := IsUitgesloten
				? 0[GJ_yr]
				: MakeDefined(
					  union_data(., Allocatie/BestaandeWoning/Metervraag/Warmte_LT, Allocatie/BestaandeUtil/Metervraag/Warmte_LT)
					+ union_data(., Allocatie/BestaandeWoning/Metervraag/Warmte_MT, Allocatie/BestaandeUtil/Metervraag/Warmte_MT)
				,0[GJ_yr]);

			attribute<string> C07_GebouwOptie        := 
				D2_bebouwingscomponent ='wonen'
				? BebouwingsComponenten/BestaandeWoning/BcGebouwOptie/name[
					union_data(., Allocatie/BestaandeWoning/BO/GebouwOptie_rel, const(1b,Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied))
					]
				: BebouwingsComponenten/BestaandeUtil/BcGebouwOptie/name[
					union_data(., const(1b,Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied), Allocatie/BestaandeUtil/BO/GebouwOptie_rel)
					];

			attribute<string> C08_Warmteoptie        := Classifications/WarmteOptie/name[
				union_data(., Allocatie/BestaandeWoning/WarmteAllocatie, Allocatie/BestaandeUtil/WarmteAllocatie)
				];

			attribute<string> C09_Elabel             := Classifications/schillabel/name[
				union_data(., Allocatie/BestaandeWoning/BO/SchilLabel_rel, Allocatie/BestaandeUtil/BO/SchilLabel_rel)
				];

// 			attribute<string> C09_Elabel             := Classifications/schillabel/name[
// 					union_data(., BebouwingsComponenten/BestaandeWoning/BebouwingsObjectMetGebouwOptie/SchilLabel_rel , BebouwingsComponenten/BestaandeUtil/BebouwingsObjectMetGebouwOptie/SchilLabel_rel )
//				];

			attribute<string> C10_Model_rel           := replace(
				 union_data(
					.
					, Invoer/Kengetallen/Bebouwing/BestaandeWoning/results/label[BebouwingsComponenten/BestaandeWoning/BO/Model_rel]
					, Invoer/Kengetallen/Bebouwing/BestaandeUtil/results/label[BebouwingsComponenten/BestaandeUtil/BO/Model_rel]
				 )
				,','
				,' &'
			);

			attribute<Eur_yr> K08_Gebouw_schil        := (IsUitgesloten || IsStap0 || IsReferentie)
				? 0[Eur_yr]
				: MakeDefined(union_data(., Allocatie/BestaandeWoning/BO/KapitaalLasten/Kmi_gv, Allocatie/BestaandeUtil/BO/KapitaalLasten/Kmi_gv), 0[Eur_yr]); //- Origkosten/table/K08_Gebouw_schil --> 0

			attribute<Eur_yr> K09_Gebouw_installatie  := (IsUitgesloten || IsStap0 || IsReferentie)
				? 0[Eur_yr]
				: MakeDefined(
					(
						  union_data(., Allocatie/BestaandeWoning/BO/eenmalig/Ki30_LO, Allocatie/BestaandeUtil/BO/eenmalig/Ki30_LO) * NCW/mr30/AnnualisationFactor
						+ union_data(., Allocatie/BestaandeWoning/BO/eenmalig/Ki20_LO, Allocatie/BestaandeUtil/BO/eenmalig/Ki20_LO) * NCW/mr20/AnnualisationFactor
						+ union_data(., Allocatie/BestaandeWoning/BO/eenmalig/Ki15_LO, Allocatie/BestaandeUtil/BO/eenmalig/Ki15_LO) * NCW/mr15/AnnualisationFactor
						+ union_data(., Allocatie/BestaandeWoning/BO/eenmalig/Ki_LTAS, Allocatie/BestaandeUtil/BO/eenmalig/Ki_LTAS) * NCW/mr30/AnnualisationFactor
					)
					-
					(
						  union_data(., /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeWoning/BO/eenmalig/Ki30_LO, /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeUtil/BO/eenmalig/Ki30_LO) * NCW/mr30/AnnualisationFactor
						+ union_data(., /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeWoning/BO/eenmalig/Ki20_LO, /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeUtil/BO/eenmalig/Ki20_LO) * NCW/mr20/AnnualisationFactor
						+ union_data(., /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeWoning/BO/eenmalig/Ki15_LO, /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeUtil/BO/eenmalig/Ki15_LO) * NCW/mr15/AnnualisationFactor
						+ union_data(., /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeWoning/BO/eenmalig/Ki_LTAS, /TussenResultaten/R1_2030/AllocatieResultaten/BestaandeUtil/BO/eenmalig/Ki_LTAS) * NCW/mr30/AnnualisationFactor
					)
					,0[Eur_yr]);

			attribute<Eur_yr> K14_Gebouw_OenM         :=  IsUitgesloten
				? 0[Eur_yr]
				: MakeDefined(
					(
						  union_data(., Allocatie/BestaandeWoning/BO/jaarlijks/KJ_OH_LO , Allocatie/BestaandeUtil/BO/jaarlijks/KJ_OH_LO)
						+ union_data(., Allocatie/BestaandeWoning/BO/jaarlijks/Kj_Adm_LO, Allocatie/BestaandeUtil/BO/jaarlijks/Kj_Adm_LO)
					)
				,0[Eur_yr]); //Kj_id_LO_oh -->0//onderhoudskosten gebouwinstallaties gebiedsopties
		}

		unit<uint32> variable := SubItem_PropValues(WoonUtil,'name');

		container export_csv_nl := Rapportage/WriteTable32ToCSV(WoonUtil, AsList(variable/name, ';'), FolderInfo/OutputFolder + '/Datapakket.csv');

		parameter<string> generate_all_studiegebied      := 'OK', ExplicitSuppliers = "=generate_all_studiegebied_expr";
		parameter<string> generate_all_studiegebied_expr :=  AsList('Gemeente/' + SharedInvoer/Studiegebied + '/export_csv/result',';');

		container Gemeente := for_each_ne(Geography/RegioIndelingen/Gemeente/GM_code
			,'per_gemeente(' + quote(Geography/RegioIndelingen/Gemeente/GM_code) + ')'
			);

		template per_gemeente
		{
			// begin case parameters
			parameter<string> GM_code_sel;
			// end case parameters

			unit<uint32> table := Subset(GM_code_sel == GM_code)
			{
				attribute<string>  D1_identificatie          := WoonUtil/D1_identificatie[Nr_OrgEntity];
				attribute<string>  D2_bebouwingscomponent    := WoonUtil/D2_bebouwingscomponent[Nr_OrgEntity];
				attribute<m>       D3_RD_X                   := WoonUtil/D3_RD_X[Nr_OrgEntity];
				attribute<m>       D4_RD_Y                   := WoonUtil/D4_RD_Y[Nr_OrgEntity];
				attribute<m2>      D5_Oppervlakte            := WoonUtil/D5_Oppervlakte[Nr_OrgEntity];

				attribute<string>  I01_BU_CODE               := WoonUtil/I01_BU_CODE[Nr_OrgEntity];
				
				attribute<GJ_yr>   H01_Vraag_totaal          := WoonUtil/H01_Vraag_totaal[Nr_OrgEntity];
				attribute<GJ_yr>   H02_Vraag_RV              := WoonUtil/H02_Vraag_RV[Nr_OrgEntity];
				attribute<GJ_yr>   H03_Vraag_TW              := WoonUtil/H03_Vraag_TW[Nr_OrgEntity];
				attribute<GJ_yr>   H04_Vraag_Vent            := WoonUtil/H04_Vraag_Vent[Nr_OrgEntity];
				attribute<GJ_yr>   H05_Vraag_K               := WoonUtil/H05_Vraag_K[Nr_OrgEntity];
				attribute<GJ_yr>   H06_Vraag_App             := WoonUtil/H06_Vraag_App[Nr_OrgEntity];
				attribute<GJ_yr>   H31_input_gas             := WoonUtil/H31_input_gas[Nr_OrgEntity];
				attribute<GJ_yr>   H32_input_elektriciteit   := WoonUtil/H32_input_elektriciteit[Nr_OrgEntity];
				attribute<GJ_yr>   H33_input_warmte          := WoonUtil/H33_input_warmte[Nr_OrgEntity];

				attribute<string>  C07_GebouwOptie           := WoonUtil/C07_GebouwOptie[Nr_OrgEntity];
				attribute<string>  C08_Warmteoptie           := WoonUtil/C08_Warmteoptie[Nr_OrgEntity];
				attribute<string>  C09_Elabel                := WoonUtil/C09_Elabel[Nr_OrgEntity];
				attribute<string>  C10_Model_rel             := WoonUtil/C10_Model_rel[Nr_OrgEntity];

				attribute<Eur_yr>  K08_Gebouw_schil          := WoonUtil/K08_Gebouw_schil[Nr_OrgEntity];
				attribute<Eur_yr>  K09_Gebouw_installatie    := WoonUtil/K09_Gebouw_installatie[Nr_OrgEntity];
				attribute<Eur_yr>  K14_Gebouw_OenM           := WoonUtil/K14_Gebouw_OenM[Nr_OrgEntity];
			}

			
			unit<uint32> TableFieldsIncludingOrgEntity := SubItem_PropValues(Table,'name'); 
			unit<uint32> TableFields                   := Subset(TableFieldsIncludingOrgEntity/name <> 'nr_OrgEntity')
			{
				attribute<string> name:= TableFieldsIncludingOrgEntity/name[nr_OrgEntity]; 
			}
			container export_csv := 
				Rapportage/WriteTable32ToCSV(
				  table
				, AsList(TableFields/name, ';')
				, '%localDataProjDir%/Results/Datapakket_Per_Gemeente/' + GM_CODE_SEL + '/'+ Expand( . , '%configName%') + '/'+ RekenstapName +'/Datapakket.csv'
				);
		}
	}
	unit<uint32> WoonUtilELabel := bestaand/WoonUtil
	{
		attribute<string> vbo_id  := Bestaand/WoonUtil/D1_identificatie;
		attribute<string> pand_id := rjoin(vbo_id,/Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/identificatie,/Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/pand_id);

		attribute<string> el_label_woning      := Classifications/RVOEnergieLabel/name[rjoin(vbo_id, Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/identificatie, Invoer/RuimtelijkeData/Bebouwing/impl/BestaandeWoning/RVOLabel_inclusief_voorlopig_rel)];
		attribute<string> el_label_util        := Classifications/schillabel/name[rjoin(vbo_id, Invoer/RuimtelijkeData/BAG/vbo_utiliteit_studiegebied/identificatie, BeginSituatie/StartingStateComponenten/BestaandeUtil/results/SchilLabel_rel)];
		attribute<string> el_label             := MakeDefined(el_label_woning, el_label_util);
		attribute<uint8>  el_label_type_woning := rjoin(vbo_id, Invoer/RuimtelijkeData/BAG/vbo_woonfunctie_studiegebied/identificatie, Invoer/RuimtelijkeData/Bebouwing/impl/BestaandeWoning/ellabel_type);
		attribute<uint8>  el_label_type_util   := isDefined(el_label_util) ? 3b : 0b;
		attribute<uint8>  el_label_type        := MakeDefined(el_label_type_woning, el_label_type_util);
		
		attribute<ELabelunique> el_label_type_Rel          := rlookup(WoonUtilELabel/el_label_type, ELabelunique/values);
		
		container export_csv := 
			Rapportage/WriteTable32ToCSV(
			  WoonUtilELabel
			, 'vbo_id;pand_id;el_label;el_label_type'
			, FolderInfo/OutputFolder + '/DatapakketEnergieLabels.csv'
			);
	}

	unit<uint32> ELabelunique := unique(WoonUtilELabel/el_label_type)
		{
			attribute<uint32> aantal := pcount(WoonUtilELabel/el_label_type_Rel);
		}
}